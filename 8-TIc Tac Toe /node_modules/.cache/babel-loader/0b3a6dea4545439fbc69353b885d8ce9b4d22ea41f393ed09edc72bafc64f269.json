{"ast":null,"code":"var _jsxFileName = \"/home/pc/Desktop/frontend/React basic porject/12 Project /8-TIc Tac Toe /src/TicTacToe/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./TicTacToe.css\";\nimport circle from \"../assets/circle.png\";\nimport cross from \"../assets/cross.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null)); // Board state\n  const [isXNext, setIsXNext] = useState(true); // Toggle between X and O\n  const [winner, setWinner] = useState(null); // Track the winner\n  const [lock, setLock] = useState(false); // Lock the board after a win\n\n  // Handle click on a box\n  const handleClick = index => {\n    if (board[index] || lock) return; // Prevent clicking on filled or locked boxes\n\n    const newBoard = [...board];\n    newBoard[index] = isXNext ? \"x\" : \"o\"; // Set 'x' or 'o' in the board state\n    setBoard(newBoard);\n    setIsXNext(!isXNext); // Toggle turn\n    checkWin(newBoard); // Check for a winner\n  };\n\n  // Check for a winner\n  const checkWin = currentBoard => {\n    const winPatterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let pattern of winPatterns) {\n      const [a, b, c] = pattern;\n      if (currentBoard[a] && currentBoard[a] === currentBoard[b] && currentBoard[a] === currentBoard[c]) {\n        setWinner(currentBoard[a]);\n        setLock(true); // Lock the board\n        return;\n      }\n    }\n\n    // Check for a draw\n    if (currentBoard.every(cell => cell)) {\n      setWinner(\"draw\");\n      setLock(true);\n    }\n  };\n\n  // Reset the game\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXNext(true);\n    setWinner(null);\n    setLock(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: [\"Tic Tac Toe Game in \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boxes ${winner && \"locked\"}`,\n        onClick: () => handleClick(index),\n        children: [cell === \"x\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cross,\n          alt: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 42\n        }, this), cell === \"o\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: circle,\n          alt: \"O\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 42\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: winner === \"draw\" ? \"It's a draw!\" : `Winner: ${winner.toUpperCase()}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: resetGame,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(TicTacToe, \"aqN6QhOh/bu73lzUuwW6GVGpwIY=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","circle","cross","jsxDEV","_jsxDEV","TicTacToe","_s","board","setBoard","Array","fill","isXNext","setIsXNext","winner","setWinner","lock","setLock","handleClick","index","newBoard","checkWin","currentBoard","winPatterns","pattern","a","b","c","every","cell","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","alt","toUpperCase","_c","$RefreshReg$"],"sources":["/home/pc/Desktop/frontend/React basic porject/12 Project /8-TIc Tac Toe /src/TicTacToe/TicTacToe.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./TicTacToe.css\";\nimport circle from \"../assets/circle.png\";\nimport cross from \"../assets/cross.png\";\n\nfunction TicTacToe() {\n    const [board, setBoard] = useState(Array(9).fill(null)); // Board state\n    const [isXNext, setIsXNext] = useState(true); // Toggle between X and O\n    const [winner, setWinner] = useState(null); // Track the winner\n    const [lock, setLock] = useState(false); // Lock the board after a win\n\n    // Handle click on a box\n    const handleClick = (index) => {\n        if (board[index] || lock) return; // Prevent clicking on filled or locked boxes\n\n        const newBoard = [...board];\n        newBoard[index] = isXNext ? \"x\" : \"o\"; // Set 'x' or 'o' in the board state\n        setBoard(newBoard);\n        setIsXNext(!isXNext); // Toggle turn\n        checkWin(newBoard); // Check for a winner\n    };\n\n    // Check for a winner\n    const checkWin = (currentBoard) => {\n        const winPatterns = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n\n        for (let pattern of winPatterns) {\n            const [a, b, c] = pattern;\n            if (\n                currentBoard[a] &&\n                currentBoard[a] === currentBoard[b] &&\n                currentBoard[a] === currentBoard[c]\n            ) {\n                setWinner(currentBoard[a]);\n                setLock(true); // Lock the board\n                return;\n            }\n        }\n\n        // Check for a draw\n        if (currentBoard.every((cell) => cell)) {\n            setWinner(\"draw\");\n            setLock(true);\n        }\n    };\n\n    // Reset the game\n    const resetGame = () => {\n        setBoard(Array(9).fill(null));\n        setIsXNext(true);\n        setWinner(null);\n        setLock(false);\n    };\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"title\">\n                Tic Tac Toe Game in <span>React</span>\n            </h1>\n            <div className=\"board\">\n                {board.map((cell, index) => (\n                    <div\n                        key={index}\n                        className={`boxes ${winner && \"locked\"}`}\n                        onClick={() => handleClick(index)}\n                    >\n                        {cell === \"x\" && <img src={cross} alt=\"X\" />}\n                        {cell === \"o\" && <img src={circle} alt=\"O\" />}\n                    </div>\n                ))}\n            </div>\n            {winner && (\n                <div className=\"result\">\n                    {winner === \"draw\"\n                        ? \"It's a draw!\"\n                        : `Winner: ${winner.toUpperCase()}`}\n                </div>\n            )}\n            <button className=\"reset\" onClick={resetGame}>\n                Reset\n            </button>\n        </div>\n    );\n}\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}